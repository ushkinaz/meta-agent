package ru.agent.beldum.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Arrays;
import jetbrains.mps.smodel.runtime.impl.CompiledConceptDescriptor;
import jetbrains.mps.smodel.runtime.interpreted.StructureAspectInterpreted;

public class StructureAspectDescriptor implements jetbrains.mps.smodel.runtime.StructureAspectDescriptor {
  private static String[] stringSwitchCases_1htk8d_a0a0a = new String[]{"ru.agent.beldum.structure.BeanDescriptor", "ru.agent.beldum.structure.BeanField", "ru.agent.beldum.structure.BeanFieldReference", "ru.agent.beldum.structure.BeanTransformation", "ru.agent.beldum.structure.CustomStrategy", "ru.agent.beldum.structure.DiscardStrategy", "ru.agent.beldum.structure.FieldTransformation", "ru.agent.beldum.structure.HasDocumentation", "ru.agent.beldum.structure.HasName", "ru.agent.beldum.structure.PresentationBean", "ru.agent.beldum.structure.SimpleCopyStrategy", "ru.agent.beldum.structure.TransformationStrategy", "ru.agent.beldum.structure.TransportBean"};

  public StructureAspectDescriptor() {
  }

  public ConceptDescriptor getDescriptor(String conceptFqName) {
    switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0a, conceptFqName)) {
      case 0:
        return new CompiledConceptDescriptor("ru.agent.beldum.structure.BeanDescriptor", "jetbrains.mps.baseLanguage.structure.ClassConcept", false, new String[]{"jetbrains.mps.baseLanguage.structure.ClassConcept", "ru.agent.beldum.structure.HasDocumentation"}, new String[]{}, new String[]{});
      case 1:
        return new CompiledConceptDescriptor("ru.agent.beldum.structure.BeanField", "jetbrains.mps.baseLanguage.structure.Property", false, new String[]{"jetbrains.mps.baseLanguage.structure.Property", "ru.agent.beldum.structure.HasDocumentation"}, new String[]{"includeInToString"}, new String[]{});
      case 2:
        return new CompiledConceptDescriptor("ru.agent.beldum.structure.BeanFieldReference", "jetbrains.mps.baseLanguage.structure.Expression", false, new String[]{"jetbrains.mps.baseLanguage.structure.Expression"}, new String[]{}, new String[]{"property"});
      case 3:
        return new CompiledConceptDescriptor("ru.agent.beldum.structure.BeanTransformation", "jetbrains.mps.baseLanguage.structure.ClassConcept", false, new String[]{"jetbrains.mps.baseLanguage.structure.ClassConcept", "ru.agent.beldum.structure.HasName"}, new String[]{}, new String[]{});
      case 4:
        return new CompiledConceptDescriptor("ru.agent.beldum.structure.CustomStrategy", "ru.agent.beldum.structure.TransformationStrategy", false, new String[]{"ru.agent.beldum.structure.TransformationStrategy"}, new String[]{}, new String[]{"transformDeclaration"});
      case 5:
        return new CompiledConceptDescriptor("ru.agent.beldum.structure.DiscardStrategy", "ru.agent.beldum.structure.TransformationStrategy", false, new String[]{"ru.agent.beldum.structure.TransformationStrategy"}, new String[]{}, new String[]{});
      case 6:
        return new CompiledConceptDescriptor("ru.agent.beldum.structure.FieldTransformation", "jetbrains.mps.lang.core.structure.BaseConcept", false, new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"}, new String[]{}, new String[]{});
      case 7:
        return new CompiledConceptDescriptor("ru.agent.beldum.structure.HasDocumentation", null, true, new String[]{}, new String[]{"description"}, new String[]{});
      case 8:
        return new CompiledConceptDescriptor("ru.agent.beldum.structure.HasName", null, true, new String[]{"jetbrains.mps.lang.core.structure.INamedConcept"}, new String[]{}, new String[]{});
      case 9:
        return new CompiledConceptDescriptor("ru.agent.beldum.structure.PresentationBean", "ru.agent.beldum.structure.BeanDescriptor", false, new String[]{"ru.agent.beldum.structure.BeanDescriptor"}, new String[]{}, new String[]{});
      case 10:
        return new CompiledConceptDescriptor("ru.agent.beldum.structure.SimpleCopyStrategy", "ru.agent.beldum.structure.TransformationStrategy", false, new String[]{"ru.agent.beldum.structure.TransformationStrategy"}, new String[]{}, new String[]{});
      case 11:
        return new CompiledConceptDescriptor("ru.agent.beldum.structure.TransformationStrategy", "jetbrains.mps.lang.core.structure.BaseConcept", false, new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"}, new String[]{}, new String[]{});
      case 12:
        return new CompiledConceptDescriptor("ru.agent.beldum.structure.TransportBean", "ru.agent.beldum.structure.BeanDescriptor", false, new String[]{"ru.agent.beldum.structure.BeanDescriptor"}, new String[]{}, new String[]{});
      default:
        return StructureAspectInterpreted.getInstance().getDescriptor(conceptFqName);
    }
  }
}
